create or replace PROCEDURE SELECT_EMP_LEVEL1(minval int, maxval int, whereclause varchar2) AS    --minval int := 40;    --maxval int := 80;    type empcurtype is ref cursor;    empcv empcurtype;    emprec employees%rowtype;    sqlstmt varchar2(100);        cursor mytablescur is select * from mytables;    mytablescurval mytables%rowtype;        new_max int;    new_min int;BEGIN    execute immediate 'truncate table output_employee';    for mytablescurval in mytablescur     loop        if mytablescurval.name='employees' then            if (mytablescurval.minval <= minval) and (mytablescurval.maxval >= maxval) then --completely inside                dbms_output.put_line('completlty insdie');                sqlstmt := 'select * from employees '||whereclause||' id>='||minval||' and id<='||maxval;                  dbms_output.put_line('lkevel1:'||sqlstmt);        --query own table                open empcv for sqlstmt;                                loop                     fetch empcv into emprec;                    exit when empcv%notfound;                    insert into output_employee values(emprec.id, emprec.name, emprec.payscale, emprec.joindate, emprec.enddate, emprec.skills, emprec.salary);                end loop;                                close empcv;                dbms_output.put_line('level1 : fetched '||minval||' to '||maxval||' from only local tables - exiting');                return;            end if;                        if (mytablescurval.minval > maxval) or (mytablescurval.maxval < minval) then                dbms_output.put_line('completely outside');                select_emp_level2(minval, maxval, whereclause);                dbms_output.put_line('level1 : fetched '||minval||' to '||maxval||' from copied tables - exiting');                return;            end if;                        dbms_output.put_line('tables.minval = '||mytablescurval.minval ||' '||minval);            if (mytablescurval.minval > minval) or  (mytablescurval.maxval < maxval) then                dbms_output.put_line('either left or rigth split');                if not mytablescurval.maxval < maxval then                    dbms_output.put_line('only left split');                    --only left split                    sqlstmt := 'select * from employees '||whereclause||' id>='||minval||' and id<='||maxval;                                    --query own table                    open empcv for sqlstmt;                                          loop                         fetch empcv into emprec;                        exit when empcv%notfound;                        insert into output_employee values(emprec.id, emprec.name, emprec.payscale, emprec.joindate, emprec.enddate, emprec.skills, emprec.salary);                    end loop;                                        close empcv;                    dbms_output.put_line('level1 : fetched '||minval||' to '||maxval||' from local tables');                    new_max := mytablescurval.minval-1;                                        select_emp_level2(minval, new_max, whereclause);                    dbms_output.put_line('level1 : fetched '||minval||' to '||new_max||' from only copied tables - exiting');                    return;                                    end if;                                if not mytablescurval.minval > minval then --right split                    dbms_output.put_line('only right split');                    sqlstmt := 'select * from employees '||whereclause||' id>='||minval||' and id<='||maxval;                                  open empcv for sqlstmt;                     loop                         fetch empcv into emprec;                        exit when empcv%notfound;                        insert into output_employee values(emprec.id, emprec.name, emprec.payscale, emprec.joindate, emprec.enddate, emprec.skills, emprec.salary);                    end loop;                    close empcv;                    dbms_output.put_line('level1 : fetched '||minval||' to '||maxval||' from  local tables ');                    new_min := mytablescurval.maxval + 1;                    select_emp_level2(new_min, maxval, whereclause);                    return;                                    end if;                                dbms_output.put_line('both splits!');                 sqlstmt := 'select * from employees '||whereclause||' id>='||minval||' and id<='||maxval;                              open empcv for sqlstmt;                 loop                     fetch empcv into emprec;                    exit when empcv%notfound;                    insert into output_employee values(emprec.id, emprec.name, emprec.payscale, emprec.joindate, emprec.enddate, emprec.skills, emprec.salary);                end loop;                close empcv;                dbms_output.put_line('level1 : fetched '||minval||' to '||maxval||' from  local tables ');                                select_emp_level2(minval, mytablescurval.minval-1, whereclause);                select_emp_level2(mytablescurval.maxval+1, maxval, whereclause);                dbms_output.put_line('level1 : fetched '||minval||' to '||maxval||' from somewhwere else');                return;            end if;        end if;    end loop;END;