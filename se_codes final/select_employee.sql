create or replaceprocedure select_employee(whereclause varchar2, attr varchar2, minval int, maxval int) as    --whereclause varchar2(40) := ' where id > 6';    --minval int := 1;    --maxval int := 2;    --attibute varchar2(20) := 'id';    type empcurtype is ref cursor;    empcv empcurtype;    emprec employees%rowtype;    sqlstmt varchar(200);        Connection_timeout exception;    pragma exception_init(Connection_timeout, -12170);        --total_req_tables int := 2;    --total int;        cursor mytablecur is select * from MyTables;    mytableval MyTables%rowtype;         cursor copieswithmecur is select * from copiesWithMe;    copieswithmeval copiesWithMe%rowtype;    tempval varchar2(30);        cursor birthsitescur is select * from birthsites;    birthsitesval birthsites%rowtype;    begin  execute immediate 'truncate table output_employee';  execute immediate 'alter session set NLS_DATE_FORMAT = "MM/DD/YYYY"';    if attr='id' then      dbms_output.put_line('reached here!!!!');      select_emp_level1(minval, maxval, whereclause);      return;  end if;      dbms_output.put_line('reached here 1');  for mytableval in mytablecur  loop    if mytableval.name='employees' then        sqlstmt := 'select * from employees '||whereclause||' id>='||minval||' and id<='||maxval;        --query own table        dbms_output.put_line('employee!!');        open empcv for sqlstmt;                loop             fetch empcv into emprec;            exit when empcv%notfound;            insert into output_employee values(emprec.id, emprec.name, emprec.payscale, emprec.joindate, emprec.enddate, emprec.skills, emprec.salary);        end loop;                close empcv;        ---try breaking from loop here         --done querring own table, go for other tables--got to specify boolean input else keeping copy is useless     end if;  end loop;   for copieswithmeval in copieswithmecur   loop      tempval := copieswithmeval.tablename;      if (copieswithmeval.attr=attr and substr(tempval, 0,length('employees'))='employees') then          if (copieswithmeval.minval <= minval and copieswithmeval.maxval >= maxval) then --good copy kept!--even if select query is = query, pass = value in min input              sqlstmt := 'select * from employees '||whereclause||' id>='||minval||' and id<='||maxval;                            --reading from my copy and inserting in output              open empcv for sqlstmt;              loop                   fetch empcv into emprec;                  exit when empcv%notfound;                  insert into output_employee values(emprec.id, emprec.name, emprec.payscale, emprec.joindate, emprec.enddate, emprec.skills, emprec.salary);              end loop;              close empcv;                        end if;      end if;  end loop;      for birthsitesval in birthsitescur  loop      if birthsitesval.tablename='employees' then          sqlstmt := 'select * from employees '||whereclause||' id>='||minval||' and id<='||maxval;                        dbms_output.put_line(sqlstmt);          open empcv for sqlstmt;          loop               fetch empcv into emprec;              exit when empcv%notfound;              insert into output_employee values(emprec.id, emprec.name, emprec.payscale, emprec.joindate, emprec.enddate, emprec.skills, emprec.salary);          end loop;          close empcv;                end if;  end loop;    exception         when Connection_timeout then          dbms_output.put_line('Not able to connect on network!');/*    dbms_output.put_line(sqlstmt);    open empcv for sqlstmt;    loop       fetch empcv into emprec;      exit when empcv%notfound;      dbms_output.put_line(emprec.name);    end loop;    close empcv;*/end; 